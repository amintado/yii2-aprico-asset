<?php
/**
 * Created by PhpStorm.
 * User: amintado
 * Date: 04/27/2017
 * Time: 03:48 PM
 */

namespace amintado\Chart;

use function json_encode;
use phpDocumentor\Reflection\Types\Self_;
use function scandir;
use function str_replace;
use yii\base\Widget;

class Chart extends Widget
{
    public $type='line';
    public $data=[];
    public $options=[];
    public $lables=[];
    public $datasets =[];
    public $id='chart';
    public function init()
    {
        //ChartAsset::register($this->getView());
        $this->lables=json_encode($this->lables);
        $this->lables=str_replace('{','[',$this->lables);
        $this->lables=str_replace('}',']',$this->lables);

        switch ($this->type) {
            case 'line':

                $this->getView()->registerJs('
                  var lineChartData = {
                  "lables":'.$this->lables.'
                  type: \'line\',
                  datasets : ' . json_encode($this->datasets).'
                  
                  
                   var myLine = new Chart(document.getElementById("'.$this->id.'").getContext("2d")).Line(lineChartData);
                  ');
            break;

            case 'bar':
                $this->getView()->registerJs('
                  var scatterChart = new Chart(ctx, {
                  type: \'bar\',
                  data: ' . json_encode($this->data) . ',
                  options: ' . json_encode($this->options)  );
            break;

            case 'radar':
                $this->getView()->registerJs('
                  var scatterChart = new Chart(ctx, {
                  type: \'radar\',
                  data: ' . json_encode($this->data) . ',
                  options: ' . json_encode($this->options)  );
            break;

            case 'polarArea':
                $this->getView()->registerJs('
                  var scatterChart = new Chart(ctx, {
                  type: \'polarArea\',
                  data: ' . json_encode($this->data) . ',
                  options: ' . json_encode($this->options)  );
            break;
        };

        parent::init(); // TODO: Change the autogenerated stub
    }
}